{% macro create(num, prefix='inventory') %}

    <div class="sheet-card">
        {# Checkboxes for show and hide #}
        {% for type in fields.card.type.options %}
            <input type="checkbox" class="sheet-hidden sheet-toggle-{{type}}" name="attr_{{fields.card.type | getAttr | attach(prefix, num)}}" value="{{type}}" {{ "checked" if prefix == type }}/>
        {% endfor %}

        {# Type indicator #}
        <div class="sheet-card-type">
            <select class="sheet-shy" name="attr_{{fields.card.type | getAttr | attach(prefix, num)}}">
                {% for type in fields.card.type.options %}
                    <option value="{{type}}" {% if prefix == type%} selected="selected" {%endif%}>{% if type == 'inventory' %}Consumable {% else %}{{type | capitalize}}{% endif %}</option>
                {% endfor %}
            </select>            
            <select class="sheet-shy sheet-weapon-only" name="attr_{{fields.card.weapontype | getAttr | attach(prefix, num)}}">
                {% for type in fields.card.weapontype.options %}
                    <option value="{{type}}" {% if loop.first%} selected="selected" {%endif%}>{{type | capitalize}}</option>
                {% endfor %}
            </select>
        </div>

        {# Checkboxes for weapon type show and hide #}
        {% for type in fields.card.weapontype.options %}
            <input type="checkbox" class="sheet-hidden sheet-show-{{type}}" name="attr_{{fields.card.weapontype | getAttr | attach(prefix, num)}}" value="{{type}}" {{ "checked" if loop.first }}/>
        {% endfor %}

        {# Name #}
        <div class="sheet-card-name">
            <input type="text" name="attr_{{fields.card.name | getAttr | attach(prefix, num)}}" placeholder="Item Name">
        </div>

        {# Weapon Only #}
        <div class="sheet-card-weapon-fields">        
            
            {# Damage #}
            <div class="sheet-card-damage  sheet-card-line">
                <div class="sheet-label">Damage:</div>
                <input class="sheet-shy" type="text" name="attr_{{fields.card.damage | getAttr | attach(prefix, num)}}" value="0" />
            </div>

            {# Uses #}
            <div class="sheet-card-uses sheet-card-line">
                <div class="sheet-label sheet-ranged-only">Ammo:</div>
                <div class="sheet-label sheet-melee-only">Durability:</div>
                <div class="sheet-max">
                    <div>
                        <input type="text" class="sheet-number sheet-shy" name="attr_{{fields.card.uses | getAttr | attach(prefix, num)}}" value="0"/>
                    </div>
                    <div class="sheet-divider">/</div>
                    <div>
                        <input type="text" class="sheet-number sheet-shy" name="attr_{{fields.card.uses | getAttr | attach(prefix, num)}}_max" value="0"/>
                    </div>
                </div>
            </div>

            {# Ammo Type #}
            {# <div class="sheet-card-ammo-type sheet-card-line sheet-ranged-only">
                <div class="sheet-label">
                    Ammo Type:
                </div>
                <select class="sheet-shy" name="attr_{{fields.card.ammotype | getAttr | attach(prefix, num)}}">
                {% for key, type in fields.character.ammo.options %}
                    <option value="{{type | getAttr}}" {% if loop.first%} selected="selected" {%endif%}>{{type | getLabel}}</option>
                {% endfor %}
            </select>
            </div> #}

        </div>

        <div class="sheet-card-textarea">
            <textarea class="sheet-shy" name="attr_{{fields.card.description | getAttr | attach(prefix, num)}}"></textarea>
            <input type="text" class="sheet-hidden" name="attr_{{fields.card.flavor | getAttr | attach(prefix, num)}}"/>
            <span readonly name="attr_{{fields.card.flavor | getAttr | attach(prefix, num)}}"></span>
        </div>
        <div class="sheet-card-actions">
            {# Since roll20 uses curly braces for roll buttons, we need to do some ridiculous escaping and we can't have spaces #}
            {# <button type="roll" class="sheet-attack-button sheet-attack-melee btn" value="!!attack rolls='?{Number of Attacks | {{'@{'}}{{fields.character.stats.ap.id}}_rolls{{'}'}}}' defend='?{Number of Defense Rolls | {{'@{'}}{{fields.character.stats.ap.id}}_rolls{{'}'}}}' dice='{{'@{'}}{{fields.card.damage.id | attach(prefix, num)}}{{'}'}}' weaponname='{{'@{'}}{{fields.card.name.id | attach(prefix, num)}}{{'}'}}' type='{{'@{'}}{{fields.card.weapontype.id | attach(prefix, num)}}{{'}'}}' resource='{{fields.card.uses.id | attach(prefix, num)}}' characterid='@{character_id}'" name="roll_{{options.card.actions.attack}}" >Combat</button> #}
            
            
            {# melee #}<button type="roll" class="sheet-attack-button sheet-attack-melee btn" value="!!combat success='?{Number of Attacks | {{'@{'}}{{fields.character.stats.ap.id}}_rolls{{'}'}}}' guard='?{Number of Defense Rolls | {{'@{'}}{{fields.character.stats.ap.id}}_rolls{{'}'}}}' sdice='{{'@{'}}{{fields.card.damage.id | attach(prefix, num)}}{{'}'}}' gdice='d{{'@{'}}{{fields.character.defense.id}}{{'}'}}' sbonus='{{'@{'}}{{fields.character.skills.options.melee.id}}{{'}'}}' gbonus='{{'@{'}}{{fields.character.defense.bonus.id}}{{'}'}}' weaponname='{{'@{'}}{{fields.card.name.id | attach(prefix, num)}}{{'}'}}' type='{{'@{'}}{{fields.card.weapontype.id | attach(prefix, num)}}{{'}'}}' sresource='{{fields.card.uses.id | attach(prefix, num)}}'  limit='{{'@{'}}{{fields.character.stats.ap.id}}{{'}'}}' characterid='@{character_id}'" name="roll_{{options.card.actions.attack}}" >Combat</button>
            {# ranged #}<button type="roll" class="sheet-attack-button sheet-attack-ranged btn" value="!!combat success='?{Number of Attacks | {{'@{'}}{{fields.character.stats.ap.id}}_rolls{{'}'}}}' guard='?{Number of Defense Rolls | {{'@{'}}{{fields.character.stats.ap.id}}_rolls{{'}'}}}' sdice='{{'@{'}}{{fields.card.damage.id | attach(prefix, num)}}{{'}'}}' gdice='d{{'@{'}}{{fields.character.defense.id}}{{'}'}}' sbonus='{{'@{'}}{{fields.character.skills.options.ranged.id}}{{'}'}}' gbonus='{{'@{'}}{{fields.character.defense.bonus.id}}{{'}'}}' weaponname='{{'@{'}}{{fields.card.name.id | attach(prefix, num)}}{{'}'}}' type='{{'@{'}}{{fields.card.weapontype.id | attach(prefix, num)}}{{'}'}}' sresource='{{fields.card.uses.id | attach(prefix, num)}}'  limit='{{'@{'}}{{fields.character.stats.ap.id}}{{'}'}}' characterid='@{character_id}'" name="roll_{{options.card.actions.attack}}" >Combat</button>
            {# <button type="roll" class="sheet-reload-button btn" name="act_{{options.card.actions.reload | attach(prefix, num)}}" value="!!reload weapon={{num}}">Reload</button> #}
            <button type="action" class="sheet-equip-button btn" name="act_{{options.card.actions.equip | attach(prefix, num)}}">Equip</button>
            <button type="action" class="sheet-unequip-button btn" name="act_{{options.card.actions.unequip | attach(prefix, num)}}">Unequip</button>
            <button type="roll" class="sheet-export-button" name="roll_{{options.card.actions.export}}" value="!!pickup {{ fields.card | exportItem }} characterid=@{target|Target 1|character_id}'" >Trade Item</button>
            <button type="action" class="sheet-delete-button btn-danger" name="act_{{options.card.actions.delete | attach(prefix, num)}}">Delete</button>
        </div>
    </div>
{% endmacro %}